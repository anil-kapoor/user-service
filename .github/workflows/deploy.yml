name: Build and Deploy to AKS

on:
  push:
    branches:
      - '**'     # Triggers on push to any branch
  workflow_dispatch: # Enables manual run from GitHub UI

env:
  ACR_NAME: acr4anil
  IMAGE_NAME: user-service
  CLUSTER_NAME: aks4ticketing
  RESOURCE_GROUP: ticketing
  NAMESPACE: ticketing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Images (SHA + latest)
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} -t $ACR_NAME.azurecr.io/$IMAGE_NAME:latest .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

      - name: Set AKS Context
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --overwrite-existing

      - name: Create namespace if not exists
        run: |
          kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE

      - name: Replace image tag in deployment.yaml
        run: |
          sed -i "s|\${IMAGE_TAG}|${{ github.sha }}|g" kubernetes/deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
